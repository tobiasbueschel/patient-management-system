/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/tutorial_java_projects.html
 */

plugins {
  // Apply the java plugin to add support for Java
  id 'java'

  // Gradle plugin to help analyzing projects with SonarQube
  id "org.sonarqube" version "2.7"

  // Apply the application plugin to add support for building a CLI application.
  id 'application'

  // Generate code coverage report
  id 'jacoco'
}

repositories {
  // Use jcenter for resolving dependencies.
  // You can declare any Maven/Ivy/file repository here.
  jcenter()
}

dependencies {
  implementation 'com.toedter:jcalendar:1.4'
  implementation 'org.xerial:sqlite-jdbc:3.8.11.2'

  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

test {
  useJUnitPlatform()
}

jacocoTestReport {
  // Forcing the execution of 'test' before the execution of 'jacocoTestReport'
  dependsOn test
}

sonarqube {
  properties {
    property "sonar.host.url", "https://sonarcloud.io"
    property "sonar.login", System.getenv('SONAR_TOKEN')
    property "sonar.organization", System.getenv('SONAR_ORGANIZATION')
    property "sonar.projectKey", System.getenv('SONAR_PROJECT_KEY')
    property "sonar.sourceEncoding", "UTF-8"
    property "sonar.groovy.jacoco.reportPath", "build/jacoco/test.exec"
    property "sonar.qualitygate.wait", "true"
  }
}

jar {
  manifest {
    attributes(
      'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
      'Main-Class': 'pms.App'
    )
  }

  from {
    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  }
}

application {
  // Define the main class for the application.
  mainClassName = 'pms.App'
}
